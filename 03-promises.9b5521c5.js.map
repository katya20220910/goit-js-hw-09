{"mappings":"gfAAAA,EAAA,aAEMC,EAAUC,SAASC,cAAc,SACvCF,EAAQG,iBAAiB,SAAUC,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notify from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n  let delay = Number(formRef.delay.value);\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formRef.step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","addEventListener","onSubmit"],"version":3,"file":"03-promises.9b5521c5.js.map"}