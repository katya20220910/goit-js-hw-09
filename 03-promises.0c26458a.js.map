{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAkBvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,IAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEtBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAzBbL,EAAQY,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOhB,EAAQK,MAAMY,OACjC,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAQmB,OAAOF,MAAOC,GAAK,EAC9Cf,EAAce,EAAGH,GACdK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAuB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAuB,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU,IAEhEU,GAASC,OAAOhB,EAAQyB,KAAKR,M","sources":["src/js/03-promises.js"],"sourcesContent":["import {Notify} from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(formRef.delay.value);\n  for (let i = 1; i <= formRef.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formRef.step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.0c26458a.js.map"}